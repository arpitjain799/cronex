If you are familiar with cron, skip down to the section titled "REPEATERS."
In this implementation, ranges wrap around: 22-2 in the hours field is the
same as "22,23,0,1,2." Everything else is standard "man 5 crontab."

Each cron trigger is specified with a combination of five white-space
separated fields that dictate when the event should occur. In order the fields
specify trigger times for minutes past the hour, hour of the day, day of the
month, month, and day of the week.

    .--------------- minute (0 - 59)
    |   .------------ hour (0 - 23)
    |   |   .--------- day of month (1 - 31)
    |   |   |   .------ month (1 - 12) or Jan, Feb ... Dec
    |   |   |   |  .---- day of week (0 - 6) or Sun(0 or 7), Mon(1) ... Sat(6)
    V   V   V   V  V
    *   *   *   *  *  command to be executed / trigger comment

There are four ways of specifying valid values for each field, all of which
can be combined with each other using commas. There are ranges, wild-cards,
steps, and repeaters. Repeaters are a non-standard addition to cron
expressions that allow specification of events with arbitrary periods.

If the the hour, minute, and month of a given time period are valid values as
specified in the trigger and _either_ the day of the month _or_ the day of the
week is a valid value, the trigger fires.

RANGES AND WILD-CARDS
    Ranges specify a starting and ending time period. It includes all values
    from the starting value to and including the ending value.

    Wild-cards, indicated with a "*", in a field represents all valid values.
    It is _almost_ the same as specifying the range 0-59 in the minutes field,
    0-23 in the hours, 1-31 in days, 1-12 in months and 0-6 for weekdays.

    The following cron expression is triggered every day at noon from June
    through September:

        0 12 * 6-9 * * remind "Walk the ducks"

    If the day of the week field is a wild card, but the day of the month is
    an explicit range, the day of the week will be ignored and the trigger
    will only be activated on the specified days of the month. If the day of
    the month is a wild card, the same principal applies.

    This expression is triggered every week day at 4:00 PM: "0 16 * * 1-5"

    This one is triggered the first nine days of the month: "0 16 1-9 * *"

    This one is triggered every day for the first week, but only on Saturdays
    thereafter: "0 16 1-7 * 6"

STEPS
    Steps are specified with a "/" and number following a range or wild-card.
    When iterating through a range with a step, the specified number of values
    will be skipped each time. "1-10/2" is the functional equivalent to
    "1,3,5,7,9".

    The following cron expression is triggered on the first day of every
    quarter (Jan., Apr., ... Oct.) at midnight:

        0 0 1 */2 * * delete log.txt

REPEATERS
    Repeaters cause an event to trigger after arbitrary periods of time from a
    given moment which will be hitherto referred to as the epoch. By default,
    the epoch is January 1st, 1970 at 0:00. Triggers in different fields
    operate independently of each other: "%10 %10 * * *" would trigger at
    00:00, 00:10, ... 00:50, 10:00, 10:10, etc...

    The following cron expression is triggered at noon on the 10th every 5
    months:

        0 12 10 %5 * Something amazing happens at noon...

SPECIAL SYMBOLS
    There are three additional special symbols: "L", "W" and "#".

    When used in the day of the month field, a number followed by "L"
    represents the occurrence of a day of the week represented by the value
    preceding "L". In the day of the month field, "L" without a prefixed
    integer represents the last day of the month. "0 0 * * 5L" represent a
    midnight trigger for the last Friday of each month whereas "0 0 L 2 *"
    represents a midnight trigger for the last day of every February.

    "W" is only valid for the field representing days of the month, and must
    be prefixed with an integer. It specifies the weekday (Monday-Friday)
    nearest the given day. In the construct "0 0 7W * *", when the 7th falls
    on a Saturday, the trigger will be active on the 6th. If the 7th falls on
    a Sunday, the trigger will be active on the 8th.

    "#" is only valid for the field representing days of the week. The "#" has
    a prefix and suffix that represent the day of the week and the Nth
    occurrence of that day of the week. "0 0 * * 0#5" would trigger every 5th
    Sunday.

All of the constructs above can be combined in individual fields using commas:
"0,30 */7,5 1,%90,L 9-4/6,5-8 4#2" is a completely valid, albeit it hideous,
expression.

SPECIAL STRINGS
    There are several special strings that can substitute common cron
    expressions. These strings _replace_, not augment the cron fields.

    String      Equivalent
    ------      ----------
    @yearly     0 0 1 1 *
    @annually   0 0 1 1 *
    @monthly    0 0 1 * *
    @weekly     0 0 * * 0
    @daily      0 0 * * *
    @midnight   0 0 * * *
    @hourly     0 * * * *
